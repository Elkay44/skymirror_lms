datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  output   = "./prisma/client_assignment"
}

model User {
  id                    String                 @id @default(cuid())
  email                 String                 @unique
  name                  String?
  password              String
  role                  String                 @default("STUDENT")
  createdAt             DateTime               @default(now())
  updatedAt             DateTime               @updatedAt
  assignments           Assignment[]           @relation("AssignmentToUser")
  assignmentSubmissions AssignmentSubmission[] @relation("SubmissionToUser")
}

model Module {
  id          String       @id @default(cuid())
  title       String
  description String?
  order       Int          @default(0)
  courseId    String
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  assignments Assignment[] @relation("AssignmentToModule")
}

model Assignment {
  id          String                 @id @default(cuid())
  title       String
  description String?
  moduleId    String
  dueDate     DateTime?
  createdAt   DateTime               @default(now())
  updatedAt   DateTime               @updatedAt
  module      Module                 @relation("AssignmentToModule", fields: [moduleId], references: [id], onDelete: Cascade)
  rubricItems RubricItem[]
  submissions AssignmentSubmission[] @relation("SubmissionToAssignment")
  userId      String
  user        User                   @relation("AssignmentToUser", fields: [userId], references: [id], onDelete: Cascade)
}

model AssignmentSubmission {
  id           String     @id @default(cuid())
  content      String?
  fileUrl      String?
  status       String     @default("DRAFT")
  grade        Float?
  feedback     String?
  submittedAt  DateTime?
  gradedAt     DateTime?
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  assignmentId String
  userId       String
  assignment   Assignment @relation("SubmissionToAssignment", fields: [assignmentId], references: [id], onDelete: Cascade)
  user         User       @relation("SubmissionToUser", fields: [userId], references: [id], onDelete: Cascade)
}

model RubricItem {
  id           String     @id @default(cuid())
  assignmentId String
  title        String
  description  String?
  points       Int
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  assignment   Assignment @relation(fields: [assignmentId], references: [id], onDelete: Cascade)
}
